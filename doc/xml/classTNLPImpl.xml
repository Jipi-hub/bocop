<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classTNLPImpl" kind="class" language="C++" prot="public">
    <compoundname>TNLPImpl</compoundname>
    <basecompoundref prot="public" virt="non-virtual">TNLP</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classTNLPImpl_1afd23133b2c500060f4bb51df85667ebd" prot="public" static="no" mutable="no">
        <type><ref refid="classNLP" kindref="compound">NLP</ref> *</type>
        <definition>NLP* TNLPImpl::bocopNLP</definition>
        <argsstring></argsstring>
        <name>bocopNLP</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martinon/bocop/bocop3/bocop/src/NLP/NLPSolverIpopt.cpp" line="14" column="1" bodyfile="/home/martinon/bocop/bocop3/bocop/src/NLP/NLPSolverIpopt.cpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classTNLPImpl_1a628cf3b7964fde5597c6a0041090a33d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TNLPImpl::get_nlp_info</definition>
        <argsstring>(Ipopt::Index &amp;n, Ipopt::Index &amp;m, Ipopt::Index &amp;nnz_jac_g, Ipopt::Index &amp;nnz_h_lag, IndexStyleEnum &amp;Index_style)</argsstring>
        <name>get_nlp_info</name>
        <param>
          <type>Ipopt::Index &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>Ipopt::Index &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>Ipopt::Index &amp;</type>
          <declname>nnz_jac_g</declname>
        </param>
        <param>
          <type>Ipopt::Index &amp;</type>
          <declname>nnz_h_lag</declname>
        </param>
        <param>
          <type>IndexStyleEnum &amp;</type>
          <declname>Index_style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martinon/bocop/bocop3/bocop/src/NLP/NLPSolverIpopt.cpp" line="18" column="1" bodyfile="/home/martinon/bocop/bocop3/bocop/src/NLP/NLPSolverIpopt.cpp" bodystart="41" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classTNLPImpl_1afd1001b018f5e504111b1a818a93c1bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TNLPImpl::get_bounds_info</definition>
        <argsstring>(Ipopt::Index n, Ipopt::Number *x_l, Ipopt::Number *x_u, Ipopt::Index m, Ipopt::Number *g_l, Ipopt::Number *g_u)</argsstring>
        <name>get_bounds_info</name>
        <param>
          <type>Ipopt::Index</type>
          <declname>n</declname>
        </param>
        <param>
          <type>Ipopt::Number *</type>
          <declname>x_l</declname>
        </param>
        <param>
          <type>Ipopt::Number *</type>
          <declname>x_u</declname>
        </param>
        <param>
          <type>Ipopt::Index</type>
          <declname>m</declname>
        </param>
        <param>
          <type>Ipopt::Number *</type>
          <declname>g_l</declname>
        </param>
        <param>
          <type>Ipopt::Number *</type>
          <declname>g_u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martinon/bocop/bocop3/bocop/src/NLP/NLPSolverIpopt.cpp" line="19" column="1" bodyfile="/home/martinon/bocop/bocop3/bocop/src/NLP/NLPSolverIpopt.cpp" bodystart="53" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classTNLPImpl_1a5b50a4ef695c65647fde8fdce2ae86ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TNLPImpl::get_starting_point</definition>
        <argsstring>(Ipopt::Index n, bool init_x, Ipopt::Number *x, bool init_z, Ipopt::Number *z_L, Ipopt::Number *z_U, Ipopt::Index m, bool init_lambda, Ipopt::Number *lambda)</argsstring>
        <name>get_starting_point</name>
        <param>
          <type>Ipopt::Index</type>
          <declname>n</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>init_x</declname>
        </param>
        <param>
          <type>Ipopt::Number *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>init_z</declname>
        </param>
        <param>
          <type>Ipopt::Number *</type>
          <declname>z_L</declname>
        </param>
        <param>
          <type>Ipopt::Number *</type>
          <declname>z_U</declname>
        </param>
        <param>
          <type>Ipopt::Index</type>
          <declname>m</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>init_lambda</declname>
        </param>
        <param>
          <type>Ipopt::Number *</type>
          <declname>lambda</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martinon/bocop/bocop3/bocop/src/NLP/NLPSolverIpopt.cpp" line="20" column="1" bodyfile="/home/martinon/bocop/bocop3/bocop/src/NLP/NLPSolverIpopt.cpp" bodystart="68" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classTNLPImpl_1af8904000adb23df677f3bf957d023375" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TNLPImpl::finalize_solution</definition>
        <argsstring>(Ipopt::SolverReturn status, Ipopt::Index n, const Ipopt::Number *x, const Ipopt::Number *z_L, const Ipopt::Number *z_U, Ipopt::Index m, const Ipopt::Number *g, const Ipopt::Number *lambda, Ipopt::Number obj_value, const Ipopt::IpoptData *ip_data, Ipopt::IpoptCalculatedQuantities *ip_cq)</argsstring>
        <name>finalize_solution</name>
        <param>
          <type>Ipopt::SolverReturn</type>
          <declname>status</declname>
        </param>
        <param>
          <type>Ipopt::Index</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const Ipopt::Number *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const Ipopt::Number *</type>
          <declname>z_L</declname>
        </param>
        <param>
          <type>const Ipopt::Number *</type>
          <declname>z_U</declname>
        </param>
        <param>
          <type>Ipopt::Index</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const Ipopt::Number *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const Ipopt::Number *</type>
          <declname>lambda</declname>
        </param>
        <param>
          <type>Ipopt::Number</type>
          <declname>obj_value</declname>
        </param>
        <param>
          <type>const Ipopt::IpoptData *</type>
          <declname>ip_data</declname>
        </param>
        <param>
          <type>Ipopt::IpoptCalculatedQuantities *</type>
          <declname>ip_cq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martinon/bocop/bocop3/bocop/src/NLP/NLPSolverIpopt.cpp" line="23" column="1" bodyfile="/home/martinon/bocop/bocop3/bocop/src/NLP/NLPSolverIpopt.cpp" bodystart="127" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classTNLPImpl_1a5d1b63e3fc911b6afdf99754f4c3141a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TNLPImpl::eval_f</definition>
        <argsstring>(Ipopt::Index n, const Ipopt::Number *x, bool new_x, Ipopt::Number &amp;obj_value)</argsstring>
        <name>eval_f</name>
        <param>
          <type>Ipopt::Index</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const Ipopt::Number *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>new_x</declname>
        </param>
        <param>
          <type>Ipopt::Number &amp;</type>
          <declname>obj_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martinon/bocop/bocop3/bocop/src/NLP/NLPSolverIpopt.cpp" line="27" column="1" bodyfile="/home/martinon/bocop/bocop3/bocop/src/NLP/NLPSolverIpopt.cpp" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classTNLPImpl_1a5fc6685d11d6fbad9456cd6958fa765f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TNLPImpl::eval_grad_f</definition>
        <argsstring>(Ipopt::Index n, const Ipopt::Number *x, bool new_x, Ipopt::Number *grad_f)</argsstring>
        <name>eval_grad_f</name>
        <param>
          <type>Ipopt::Index</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const Ipopt::Number *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>new_x</declname>
        </param>
        <param>
          <type>Ipopt::Number *</type>
          <declname>grad_f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martinon/bocop/bocop3/bocop/src/NLP/NLPSolverIpopt.cpp" line="28" column="1" bodyfile="/home/martinon/bocop/bocop3/bocop/src/NLP/NLPSolverIpopt.cpp" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classTNLPImpl_1a934931a530152014ae66b42f10301782" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TNLPImpl::eval_g</definition>
        <argsstring>(Ipopt::Index n, const Ipopt::Number *x, bool new_x, Ipopt::Index m, Ipopt::Number *g)</argsstring>
        <name>eval_g</name>
        <param>
          <type>Ipopt::Index</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const Ipopt::Number *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>new_x</declname>
        </param>
        <param>
          <type>Ipopt::Index</type>
          <declname>m</declname>
        </param>
        <param>
          <type>Ipopt::Number *</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martinon/bocop/bocop3/bocop/src/NLP/NLPSolverIpopt.cpp" line="31" column="1" bodyfile="/home/martinon/bocop/bocop3/bocop/src/NLP/NLPSolverIpopt.cpp" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classTNLPImpl_1aeaeeaba0969d09200183610163cd83f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TNLPImpl::eval_jac_g</definition>
        <argsstring>(Ipopt::Index n, const Ipopt::Number *x, bool new_x, Ipopt::Index m, Ipopt::Index nele_jac, Ipopt::Index *iRow, Ipopt::Index *jCol, Ipopt::Number *values)</argsstring>
        <name>eval_jac_g</name>
        <param>
          <type>Ipopt::Index</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const Ipopt::Number *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>new_x</declname>
        </param>
        <param>
          <type>Ipopt::Index</type>
          <declname>m</declname>
        </param>
        <param>
          <type>Ipopt::Index</type>
          <declname>nele_jac</declname>
        </param>
        <param>
          <type>Ipopt::Index *</type>
          <declname>iRow</declname>
        </param>
        <param>
          <type>Ipopt::Index *</type>
          <declname>jCol</declname>
        </param>
        <param>
          <type>Ipopt::Number *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martinon/bocop/bocop3/bocop/src/NLP/NLPSolverIpopt.cpp" line="32" column="1" bodyfile="/home/martinon/bocop/bocop3/bocop/src/NLP/NLPSolverIpopt.cpp" bodystart="101" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classTNLPImpl_1a51ffd8d9a4d0c64337542418ffea5f44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TNLPImpl::eval_h</definition>
        <argsstring>(Ipopt::Index n, const Ipopt::Number *x, bool new_x, Ipopt::Number obj_factor, Ipopt::Index m, const Ipopt::Number *lambda, bool new_lambda, Ipopt::Index nele_hess, Ipopt::Index *iRow, Ipopt::Index *jCol, Ipopt::Number *values)</argsstring>
        <name>eval_h</name>
        <param>
          <type>Ipopt::Index</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const Ipopt::Number *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>new_x</declname>
        </param>
        <param>
          <type>Ipopt::Number</type>
          <declname>obj_factor</declname>
        </param>
        <param>
          <type>Ipopt::Index</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const Ipopt::Number *</type>
          <declname>lambda</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>new_lambda</declname>
        </param>
        <param>
          <type>Ipopt::Index</type>
          <declname>nele_hess</declname>
        </param>
        <param>
          <type>Ipopt::Index *</type>
          <declname>iRow</declname>
        </param>
        <param>
          <type>Ipopt::Index *</type>
          <declname>jCol</declname>
        </param>
        <param>
          <type>Ipopt::Number *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martinon/bocop/bocop3/bocop/src/NLP/NLPSolverIpopt.cpp" line="35" column="1" bodyfile="/home/martinon/bocop/bocop3/bocop/src/NLP/NLPSolverIpopt.cpp" bodystart="114" bodyend="125"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="86">
        <label>NLP</label>
        <link refid="classNLP"/>
      </node>
      <node id="85">
        <label>TNLPImpl</label>
        <childnode refid="86" relation="usage">
          <edgelabel>bocopNLP</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/martinon/bocop/bocop3/bocop/src/NLP/NLPSolverIpopt.cpp" line="12" column="1" bodyfile="/home/martinon/bocop/bocop3/bocop/src/NLP/NLPSolverIpopt.cpp" bodystart="11" bodyend="37"/>
    <listofallmembers>
      <member refid="classTNLPImpl_1afd23133b2c500060f4bb51df85667ebd" prot="public" virt="non-virtual"><scope>TNLPImpl</scope><name>bocopNLP</name></member>
      <member refid="classTNLPImpl_1a5d1b63e3fc911b6afdf99754f4c3141a" prot="public" virt="non-virtual"><scope>TNLPImpl</scope><name>eval_f</name></member>
      <member refid="classTNLPImpl_1a934931a530152014ae66b42f10301782" prot="public" virt="non-virtual"><scope>TNLPImpl</scope><name>eval_g</name></member>
      <member refid="classTNLPImpl_1a5fc6685d11d6fbad9456cd6958fa765f" prot="public" virt="non-virtual"><scope>TNLPImpl</scope><name>eval_grad_f</name></member>
      <member refid="classTNLPImpl_1a51ffd8d9a4d0c64337542418ffea5f44" prot="public" virt="non-virtual"><scope>TNLPImpl</scope><name>eval_h</name></member>
      <member refid="classTNLPImpl_1aeaeeaba0969d09200183610163cd83f6" prot="public" virt="non-virtual"><scope>TNLPImpl</scope><name>eval_jac_g</name></member>
      <member refid="classTNLPImpl_1af8904000adb23df677f3bf957d023375" prot="public" virt="non-virtual"><scope>TNLPImpl</scope><name>finalize_solution</name></member>
      <member refid="classTNLPImpl_1afd1001b018f5e504111b1a818a93c1bd" prot="public" virt="non-virtual"><scope>TNLPImpl</scope><name>get_bounds_info</name></member>
      <member refid="classTNLPImpl_1a628cf3b7964fde5597c6a0041090a33d" prot="public" virt="non-virtual"><scope>TNLPImpl</scope><name>get_nlp_info</name></member>
      <member refid="classTNLPImpl_1a5b50a4ef695c65647fde8fdce2ae86ec" prot="public" virt="non-virtual"><scope>TNLPImpl</scope><name>get_starting_point</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
